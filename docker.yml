---
- name: docker image build, ecr_public image push
  hosts: eks_master

  vars:
    image_name: babo-wp

  tasks:
    - name: docker install
      snap:
        name: docker

   - name: pip install
     apt:
       name: pip

    - name: docker library install
      pip:
        name: docker

    - name: get Dockerfile on Github
      get_url:
        url: "https://raw.githubusercontent.com/Beleusye/mini_pj3/master/Dockerfile"
        dest: "{{ lookup('env','HOME') }}"

    - name: get rds endpoint
      shell: aws rds describe-db-instances | grep Address | awk -F'"' '{print $4}'
      register: rds
      changed_when: false

    - name: check variable rds
      debug:
        msg: "{{ rds.stdout }}"

    - name: replace rds_endpoint on Dockerfile
      replace:
        path: "{{ lookup('env','HOME') }}/Dockerfile"
        regexp: "rds_endpoint_here"
        replace: "{{ rds.stdout }}"

    - name: docker image build
      docker_image:
        name: "{{ image_name }}"
        build:
          path: "{{ lookup('env','HOME') }}"

    - name: set variable ecr (get ecr-public repository name)
      shell: aws ecr-public describe-registries --region us-east-1 | grep name | awk -F'"' '{print $4}'
      register: ecr
      changed_when: false

    - name: check variable ecr
      debug:
        msg: "{{ ecr.stdout }}"

    - name: authenticate your Docker client to your registry
      shell: "aws ecr-public get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin public.ecr.aws/{{ ecr.stdout }}"

    - name: set image tag
      command: "docker tag {{ image_name }} public.ecr.aws/{{ ecr.stdout }}/shkim:{{ image_name }}"

    - name: image push to ecr-public
      command: "docker push public.ecr.aws/{{ ecr.stdout }}/shkim:{{ image_name }}"
